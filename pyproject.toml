[tool]
[tool.poetry]
name = "pca-package-example"
version = "0.0.1"
repository = "{cookiecutter.repo_url}}/"
documentation = "https://pcah.github.io/pca-package-example/"
description = "Example & reference build of pca-scaffold."
authors = [
    "≈Åukasz Haze <github@lhaze.name>"
]
readme = "README.md"
license =  "BSD-3-Clause"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "pca" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4"
click = "^8.1.3"

black  = {version = "^22.3.0", optional = true}
bump2version = {version = "^1.0.1", optional = true}
flake8  = {version = "^3.9.2", optional = true}
flake8-docstrings = {version = "^1.6.0", optional = true}
flake8-typing-imports  = {version = "^1.12.0", optional = true}
isort  = {version = "^5.10.1", optional = true}
mkdocs  = {version = "^1.3.0", optional = true}
mkdocs-autorefs = {version = "^0.4.1", optional = true}
mkdocs-include-markdown-plugin  = {version = "^3.3.0", optional = true}
mkdocs-material  = {version = "^8.2.13", optional = true}
mkdocs-material-extensions  = {version = "^1.0.3", optional = true}
mkdocstrings  = {version = "^0.18.1", optional = true}
mkdocstrings-sourcelink = {version = "^0.3.2", optional = true}
mypy = {version = "^0.950", optional = true}
pip  = {version = "^22.0.4", optional = true}
pre-commit = {version = "^2.18.1", optional = true}
pytest  = {version = "^7.1.2", optional = true}
pytest-cov  = {version = "^3.0.0", optional = true}
toml = {version = "^0.10.2", optional = true}
tox  = {version = "^3.25.0", optional = true}
twine  = {version = "^4.0.0", optional = true}

[tool.poetry.extras]
test = [
    "black",
    "flake8",
    "flake8-docstrings",
    "flake8-typing-imports",
    "isort",
    "mypy",
    "pytest",
    "pytest-cov"
]

dev = [
    "bump2version",
    "pip",
    "pre-commit",
    "toml",
    "tox",
    "twine",
]

docs = [
    "mkdocs",
    "mkdocs-autorefs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocs-material-extension",
    "mkdocstrings",
    "mkdocstrings-sourcelink",
]

[tool.poetry.scripts]
pca-package-example = 'pca.packages.package_example.cli:main'

[tool.black]
line-length = 119
skip-string-normalization = true
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
# skip_glob = docs/conf.py

[tool.pydocstyle]
match_dir = "pca/packages/package_example/**"
convention = "pep257"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
