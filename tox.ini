[tox]
isolated_build = true
envlist =
    clean
    py37
    py38
    py39
    py310
    pypy3
    docs
    packaging

[gh-actions]
python =
    3.7: py37
    3.8: py38, docs
    3.9: py39
    3.10: py310
    pypy-3.7: pypy3

[testenv]
commands = pytest --cov=pca --cov-branch --cov-append --cov-report term-missing --cov-report xml
extras = test
locked_deps =
    pytest
    pytest-cov
require_locked_deps = true
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONHASHSEED=0
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS=ignore

[testenv:clean]
commands = coverage erase
deps = coverage[toml]
require_locked_deps = false
skip_install = true

[testenv:docs]
basepython=python
commands=
    mkdocs build
    rm -rf site
extras = docs

[testenv:pypy3]
allowlist_externals =
    poetry
    pypy3
commands = pypy3 -m pytest
commands_pre =
  poetry export --dev --without-hashes -o .tox/requirements.txt
  pypy3 -m pip install -r .tox/requirements.txt

[testenv:packaging]
allowlist_externals =
    poetry
    twine
commands =
    poetry build
    twine check dist/*
extras = dev
require_locked_deps = false
skip_install = True

[flake8]
docstring-convention = {{ cookiecutter.docstrings_style }}
exclude =
    .eggs,
    .git,
    .github,
    .mypy_cache,
    .pytest_cache,
    .tox,
    .venv,
    .vscode,
    __pycache__,
    build,
    dist,
    docs,
    releases,
    setup.py,
ignore =
    D100
    D400
    # do not assign a lambda expression, use a def
    E731
    # black handles following errors:
    E101
    E111
    E114
    E115
    E116
    E117
    E121
    E122
    E123
    E124
    E125
    E126
    E127
    E128
    E129
    E131
    E133
    E2
    E3
    E5
    E701
    E702
    E703
    E704
    W1
    W2
    W3
    W503
    W504
max-complexity = 10
max-line-length = 119
per-file-ignores = __init__.py:F401,F403
